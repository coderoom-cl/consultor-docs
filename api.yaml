openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
  description: API for managing user information in a SaaS system.

paths:
  /api/users:
    get:
      summary: Get All Users
      description: Retrieve a list of all users.
      responses:
        '200':
          description: List of users retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal server error.

    post:
      summary: Create a User
      description: Create a new user.
      requestBody:
        description: User information to create a new user.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully.
        '400':
          description: Bad request - Invalid input data.
        '500':
          description: Internal server error.

  /api/users/{userID}:
    get:
      summary: Get User by UserID
      description: Retrieve user information by their unique userID.
      parameters:
        - in: path
          name: userID
          required: true
          description: The unique user identifier.
          schema:
            type: string
      responses:
        '200':
          description: User information retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found.
        '500':
          description: Internal server error.

    put:
      summary: Update User by UserID
      description: Update an existing user's information by their unique userID.
      parameters:
        - in: path
          name: userID
          required: true
          description: The unique user identifier.
          schema:
            type: string
      requestBody:
        description: User information to update.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully.
        '400':
          description: Bad request - Invalid input data.
        '404':
          description: User not found.
        '500':
          description: Internal server error.

    delete:
      summary: Delete User by UserID
      description: Delete a user by their unique userID.
      parameters:
        - in: path
          name: userID
          required: true
          description: The unique user identifier.
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully.
        '404':
          description: User not found.
        '500':
          description: Internal server error.

components:
  schemas:
    User:
      type: object
      properties:
        userID:
          type: string
          description: The unique user identifier.
        password:
          type: string
          description: User's password.
        name:
          type: string
          description: User's full name.
        email:
          type: string
          format: email
          description: User's email address.
        subscriptionPlan:
          type: string
          enum: [EDIGPLUS]
          description: User's subscription plan.
        subscriptionStarts:
          type: string
          format: date-time
          description: Start date and time of the subscription.
        subscriptionEnds:
          type: string
          format: date-time
          description: End date and time of the subscription.
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
